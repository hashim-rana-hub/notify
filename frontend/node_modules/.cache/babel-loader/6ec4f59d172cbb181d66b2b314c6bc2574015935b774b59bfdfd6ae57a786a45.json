{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { loginUserReducer, logoutUserReducer, registerUserReducer } from \"./reducers/userReducers\";\nimport { forgotPasswordReducer, resetPasswordReducer } from \"./reducers/forgotPasswordReducers\";\nimport { createNoteReducer, deleteNoteReducer, getNotesReducer } from \"./reducers/noteReducers\";\nconst reducers = combineReducers({\n  loginUser: loginUserReducer,\n  logoutUser: logoutUserReducer,\n  registerUser: registerUserReducer,\n  forgotPassword: forgotPasswordReducer,\n  resetPassword: resetPasswordReducer,\n  createNote: createNoteReducer,\n  getNotes: getNotesReducer,\n  deleteNote: deleteNoteReducer\n});\nconst userFromLocalStorage = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nconst initialState = {\n  loginUser: {\n    user: userFromLocalStorage\n  }\n};\nconst middlewares = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","loginUserReducer","logoutUserReducer","registerUserReducer","forgotPasswordReducer","resetPasswordReducer","createNoteReducer","deleteNoteReducer","getNotesReducer","reducers","loginUser","logoutUser","registerUser","forgotPassword","resetPassword","createNote","getNotes","deleteNote","userFromLocalStorage","localStorage","getItem","JSON","parse","initialState","user","middlewares","store"],"sources":["/Users/apple/Documents/Notiy 2/frontend/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  loginUserReducer,\n  logoutUserReducer,\n  registerUserReducer,\n} from \"./reducers/userReducers\";\nimport {\n  forgotPasswordReducer,\n  resetPasswordReducer,\n} from \"./reducers/forgotPasswordReducers\";\nimport {\n  createNoteReducer,\n  deleteNoteReducer,\n  getNotesReducer,\n} from \"./reducers/noteReducers\";\n\nconst reducers = combineReducers({\n  loginUser: loginUserReducer,\n  logoutUser: logoutUserReducer,\n  registerUser: registerUserReducer,\n  forgotPassword: forgotPasswordReducer,\n  resetPassword: resetPasswordReducer,\n  createNote: createNoteReducer,\n  getNotes: getNotesReducer,\n  deleteNote: deleteNoteReducer,\n});\n\nconst userFromLocalStorage = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nconst initialState = {\n  loginUser: {\n    user: userFromLocalStorage,\n  },\n};\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,QACd,yBAAyB;AAChC,SACEC,qBAAqB,EACrBC,oBAAoB,QACf,mCAAmC;AAC1C,SACEC,iBAAiB,EACjBC,iBAAiB,EACjBC,eAAe,QACV,yBAAyB;AAEhC,MAAMC,QAAQ,GAAGX,eAAe,CAAC;EAC/BY,SAAS,EAAET,gBAAgB;EAC3BU,UAAU,EAAET,iBAAiB;EAC7BU,YAAY,EAAET,mBAAmB;EACjCU,cAAc,EAAET,qBAAqB;EACrCU,aAAa,EAAET,oBAAoB;EACnCU,UAAU,EAAET,iBAAiB;EAC7BU,QAAQ,EAAER,eAAe;EACzBS,UAAU,EAAEV;AACd,CAAC,CAAC;AAEF,MAAMW,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GACrDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GACxC,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBb,SAAS,EAAE;IACTc,IAAI,EAAEN;EACR;AACF,CAAC;AAED,MAAMO,WAAW,GAAG,CAAC1B,KAAK,CAAC;AAE3B,MAAM2B,KAAK,GAAG9B,WAAW,CACvBa,QAAQ,EACRc,YAAY,EACZvB,mBAAmB,CAACH,eAAe,CAAC,GAAG4B,WAAW,CAAC,CACrD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}